<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0818.1050                               -->
<workbook original-version='18.1' source-build='2025.2.2 (20252.25.0818.1050)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='avg_price_by_state' inline='true' name='federated.19zj9fc0thxqms1ccbv9r18fau54' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='avg_price_by_state' name='textscan.08z8zcm1hyxlku182m81109ndhv1'>
            <connection class='textscan' directory='C:/Users/hunte/U.S. Used Car Market Analysis/exports' filename='avg_price_by_state.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.08z8zcm1hyxlku182m81109ndhv1' name='avg_price_by_state.csv' table='[avg_price_by_state#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='real' name='avg_price' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[avg_price_by_state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[avg_price_by_state.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[avg_price_by_state.csv_B4998A72E3124FD18DFAC5C26774C7E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_price]</local-name>
            <parent-name>[avg_price_by_state.csv]</parent-name>
            <remote-alias>avg_price</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[avg_price_by_state.csv_B4998A72E3124FD18DFAC5C26774C7E4]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='avg_price_by_state.csv' datatype='table' name='[__tableau_internal_object_id__].[avg_price_by_state.csv_B4998A72E3124FD18DFAC5C26774C7E4]' role='measure' type='quantitative' />
      <column caption='Avg Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[avg_price]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hunte/AppData/Local/Temp/TableauTemp/#TableauTemp_0mrkwk91grmfz41b83ya30pvof2a.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/09/2025 04:20:39 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>0</ordinal>
              <family>avg_price_by_state.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[avg_price_by_state.csv_B4998A72E3124FD18DFAC5C26774C7E4]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_price</remote-alias>
              <ordinal>1</ordinal>
              <family>avg_price_by_state.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
              <object-id>[avg_price_by_state.csv_B4998A72E3124FD18DFAC5C26774C7E4]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='avg_price_by_state.csv' id='avg_price_by_state.csv_B4998A72E3124FD18DFAC5C26774C7E4'>
            <properties context=''>
              <relation connection='textscan.08z8zcm1hyxlku182m81109ndhv1' name='avg_price_by_state.csv' table='[avg_price_by_state#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='real' name='avg_price' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='top_models' inline='true' name='federated.0q5cz5405sbxla19jnggt07687de' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='top_models' name='textscan.1drvrl604v8rzp1argyjk0y8ht81'>
            <connection class='textscan' directory='C:/Users/hunte/U.S. Used Car Market Analysis/exports' filename='top_models.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1drvrl604v8rzp1argyjk0y8ht81' name='top_models.csv' table='[top_models#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='model' ordinal='0' />
            <column datatype='integer' name='n' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[top_models.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[model]</local-name>
            <parent-name>[top_models.csv]</parent-name>
            <remote-alias>model</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[top_models.csv_640EE6DFDC2D43A1923B13533409280D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n</remote-name>
            <remote-type>20</remote-type>
            <local-name>[n]</local-name>
            <parent-name>[top_models.csv]</parent-name>
            <remote-alias>n</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[top_models.csv_640EE6DFDC2D43A1923B13533409280D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='top_models.csv' datatype='table' name='[__tableau_internal_object_id__].[top_models.csv_640EE6DFDC2D43A1923B13533409280D]' role='measure' type='quantitative' />
      <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
      <column caption='N' datatype='integer' name='[n]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hunte/AppData/Local/Temp/TableauTemp/#TableauTemp_1jclo5r1x5i4u21girbmo1ekqpzf.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/09/2025 04:28:05 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[model]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>model</remote-alias>
              <ordinal>0</ordinal>
              <family>top_models.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[top_models.csv_640EE6DFDC2D43A1923B13533409280D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>n</remote-name>
              <remote-type>20</remote-type>
              <local-name>[n]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>n</remote-alias>
              <ordinal>1</ordinal>
              <family>top_models.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <object-id>[top_models.csv_640EE6DFDC2D43A1923B13533409280D]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='top_models.csv' id='top_models.csv_640EE6DFDC2D43A1923B13533409280D'>
            <properties context=''>
              <relation connection='textscan.1drvrl604v8rzp1argyjk0y8ht81' name='top_models.csv' table='[top_models#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='model' ordinal='0' />
                  <column datatype='integer' name='n' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='body_type_counts' inline='true' name='federated.0icee4v1bvothx1g98rwz13ysb0i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='body_type_counts' name='textscan.0ksr204137jhnf17h174z1oi01km'>
            <connection class='textscan' directory='C:/Users/hunte/U.S. Used Car Market Analysis/exports' filename='body_type_counts.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0ksr204137jhnf17h174z1oi01km' name='body_type_counts.csv' table='[body_type_counts#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='body' ordinal='0' />
            <column datatype='integer' name='n' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[body_type_counts.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>body</remote-name>
            <remote-type>129</remote-type>
            <local-name>[body]</local-name>
            <parent-name>[body_type_counts.csv]</parent-name>
            <remote-alias>body</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[body_type_counts.csv_029751F62C80407784D5964320A16BF2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n</remote-name>
            <remote-type>20</remote-type>
            <local-name>[n]</local-name>
            <parent-name>[body_type_counts.csv]</parent-name>
            <remote-alias>n</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[body_type_counts.csv_029751F62C80407784D5964320A16BF2]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='body_type_counts.csv' datatype='table' name='[__tableau_internal_object_id__].[body_type_counts.csv_029751F62C80407784D5964320A16BF2]' role='measure' type='quantitative' />
      <column caption='Body' datatype='string' name='[body]' role='dimension' type='nominal' />
      <column caption='N' datatype='integer' name='[n]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hunte/AppData/Local/Temp/TableauTemp/#TableauTemp_08bh3bu1xoqnlx1deldrb16ihv4f.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/09/2025 04:36:56 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>body</remote-name>
              <remote-type>129</remote-type>
              <local-name>[body]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>body</remote-alias>
              <ordinal>0</ordinal>
              <family>body_type_counts.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[body_type_counts.csv_029751F62C80407784D5964320A16BF2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>n</remote-name>
              <remote-type>20</remote-type>
              <local-name>[n]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>n</remote-alias>
              <ordinal>1</ordinal>
              <family>body_type_counts.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[body_type_counts.csv_029751F62C80407784D5964320A16BF2]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='body_type_counts.csv' id='body_type_counts.csv_029751F62C80407784D5964320A16BF2'>
            <properties context=''>
              <relation connection='textscan.0ksr204137jhnf17h174z1oi01km' name='body_type_counts.csv' table='[body_type_counts#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='body' ordinal='0' />
                  <column datatype='integer' name='n' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='price_vs_odometer' inline='true' name='federated.0mghwcs16pszro17lokwf19ajzes' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='price_vs_odometer' name='textscan.0g7ookr15nzuzk1el4ksy03zqn7w'>
            <connection class='textscan' directory='C:/Users/hunte/U.S. Used Car Market Analysis/exports' filename='price_vs_odometer.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0g7ookr15nzuzk1el4ksy03zqn7w' name='price_vs_odometer.csv' table='[price_vs_odometer#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='string' name='make' ordinal='1' />
            <column datatype='string' name='model' ordinal='2' />
            <column datatype='string' name='trim' ordinal='3' />
            <column datatype='string' name='body' ordinal='4' />
            <column datatype='string' name='transmission' ordinal='5' />
            <column datatype='string' name='vin' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='integer' name='condition' ordinal='8' />
            <column datatype='integer' name='odometer' ordinal='9' />
            <column datatype='string' name='color' ordinal='10' />
            <column datatype='string' name='interior' ordinal='11' />
            <column datatype='string' name='seller' ordinal='12' />
            <column datatype='integer' name='mmr' ordinal='13' />
            <column datatype='integer' name='sellingprice' ordinal='14' />
            <column datatype='datetime' name='saledate' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[make]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>make</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[model]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>model</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trim</remote-name>
            <remote-type>129</remote-type>
            <local-name>[trim]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>trim</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>body</remote-name>
            <remote-type>129</remote-type>
            <local-name>[body]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>body</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transmission</remote-name>
            <remote-type>129</remote-type>
            <local-name>[transmission]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>transmission</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vin]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>vin</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>condition</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>odometer</remote-name>
            <remote-type>20</remote-type>
            <local-name>[odometer]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>odometer</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>color</remote-name>
            <remote-type>129</remote-type>
            <local-name>[color]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>color</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>interior</remote-name>
            <remote-type>129</remote-type>
            <local-name>[interior]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>interior</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>seller</remote-name>
            <remote-type>129</remote-type>
            <local-name>[seller]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>seller</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mmr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[mmr]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>mmr</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sellingprice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sellingprice]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>sellingprice</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>saledate</remote-name>
            <remote-type>135</remote-type>
            <local-name>[saledate]</local-name>
            <parent-name>[price_vs_odometer.csv]</parent-name>
            <remote-alias>saledate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='price_vs_odometer.csv' datatype='table' name='[__tableau_internal_object_id__].[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]' role='measure' type='quantitative' />
      <column caption='Body' datatype='string' name='[body]' role='dimension' type='nominal' />
      <column caption='Color' datatype='string' name='[color]' role='dimension' type='nominal' />
      <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
      <column caption='Interior' datatype='string' name='[interior]' role='dimension' type='nominal' />
      <column caption='Make' datatype='string' name='[make]' role='dimension' type='nominal' />
      <column caption='Mmr' datatype='integer' name='[mmr]' role='measure' type='quantitative' />
      <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
      <column caption='Odometer' datatype='integer' name='[odometer]' role='measure' type='quantitative' />
      <column caption='Saledate' datatype='datetime' name='[saledate]' role='dimension' type='ordinal' />
      <column caption='Seller' datatype='string' name='[seller]' role='dimension' type='nominal' />
      <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Transmission' datatype='string' name='[transmission]' role='dimension' type='nominal' />
      <column caption='Trim' datatype='string' name='[trim]' role='dimension' type='nominal' />
      <column caption='Vin' datatype='string' name='[vin]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hunte/AppData/Local/Temp/TableauTemp/#TableauTemp_0fyh2zh06749dy1alc2dq1l6fqej.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/09/2025 04:44:18 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>make</remote-name>
              <remote-type>129</remote-type>
              <local-name>[make]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>make</remote-alias>
              <ordinal>1</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[model]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>model</remote-alias>
              <ordinal>2</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trim</remote-name>
              <remote-type>129</remote-type>
              <local-name>[trim]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trim</remote-alias>
              <ordinal>3</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>126</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>body</remote-name>
              <remote-type>129</remote-type>
              <local-name>[body]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>body</remote-alias>
              <ordinal>4</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>transmission</remote-name>
              <remote-type>129</remote-type>
              <local-name>[transmission]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>transmission</remote-alias>
              <ordinal>5</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vin</remote-name>
              <remote-type>129</remote-type>
              <local-name>[vin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vin</remote-alias>
              <ordinal>6</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38351</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>7</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>condition</remote-name>
              <remote-type>20</remote-type>
              <local-name>[condition]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>condition</remote-alias>
              <ordinal>8</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>odometer</remote-name>
              <remote-type>20</remote-type>
              <local-name>[odometer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>odometer</remote-alias>
              <ordinal>9</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30852</approx-count>
              <contains-null>true</contains-null>
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>color</remote-name>
              <remote-type>129</remote-type>
              <local-name>[color]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>color</remote-alias>
              <ordinal>10</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>interior</remote-name>
              <remote-type>129</remote-type>
              <local-name>[interior]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>interior</remote-alias>
              <ordinal>11</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>seller</remote-name>
              <remote-type>129</remote-type>
              <local-name>[seller]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>seller</remote-alias>
              <ordinal>12</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2391</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mmr</remote-name>
              <remote-type>20</remote-type>
              <local-name>[mmr]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mmr</remote-alias>
              <ordinal>13</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1568</approx-count>
              <contains-null>true</contains-null>
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sellingprice</remote-name>
              <remote-type>20</remote-type>
              <local-name>[sellingprice]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sellingprice</remote-alias>
              <ordinal>14</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>717</approx-count>
              <contains-null>true</contains-null>
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>saledate</remote-name>
              <remote-type>135</remote-type>
              <local-name>[saledate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>saledate</remote-alias>
              <ordinal>15</ordinal>
              <family>price_vs_odometer.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1776</approx-count>
              <contains-null>true</contains-null>
              <object-id>[price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='price_vs_odometer.csv' id='price_vs_odometer.csv_FCA06807A46E4B74AD591F350A06D831'>
            <properties context=''>
              <relation connection='textscan.0g7ookr15nzuzk1el4ksy03zqn7w' name='price_vs_odometer.csv' table='[price_vs_odometer#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='string' name='make' ordinal='1' />
                  <column datatype='string' name='model' ordinal='2' />
                  <column datatype='string' name='trim' ordinal='3' />
                  <column datatype='string' name='body' ordinal='4' />
                  <column datatype='string' name='transmission' ordinal='5' />
                  <column datatype='string' name='vin' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='integer' name='condition' ordinal='8' />
                  <column datatype='integer' name='odometer' ordinal='9' />
                  <column datatype='string' name='color' ordinal='10' />
                  <column datatype='string' name='interior' ordinal='11' />
                  <column datatype='string' name='seller' ordinal='12' />
                  <column datatype='integer' name='mmr' ordinal='13' />
                  <column datatype='integer' name='sellingprice' ordinal='14' />
                  <column datatype='datetime' name='saledate' ordinal='15' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='avg_price_over_time' inline='true' name='federated.13nirr30e6u8tn146vy2a0z16ume' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='avg_price_over_time' name='textscan.1iv80gs1ca0d4i15p7csi0ck6wap'>
            <connection class='textscan' directory='C:/Users/hunte/U.S. Used Car Market Analysis/exports' filename='avg_price_over_time.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1iv80gs1ca0d4i15p7csi0ck6wap' name='avg_price_over_time.csv' table='[avg_price_over_time#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='month' ordinal='0' />
            <column datatype='real' name='avg_price' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[avg_price_over_time.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>133</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[avg_price_over_time.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[avg_price_over_time.csv_30C4956DB4124B6C93F522683AE7393D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_price]</local-name>
            <parent-name>[avg_price_over_time.csv]</parent-name>
            <remote-alias>avg_price</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[avg_price_over_time.csv_30C4956DB4124B6C93F522683AE7393D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='avg_price_over_time.csv' datatype='table' name='[__tableau_internal_object_id__].[avg_price_over_time.csv_30C4956DB4124B6C93F522683AE7393D]' role='measure' type='quantitative' />
      <column caption='Avg Price' datatype='real' name='[avg_price]' role='measure' type='quantitative' />
      <column caption='Month' datatype='date' name='[month]' role='dimension' type='ordinal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hunte/AppData/Local/Temp/TableauTemp/#TableauTemp_1b9zwux19n70yp1bo318q0khr5dr.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/09/2025 04:58:13 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>133</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>0</ordinal>
              <family>avg_price_over_time.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[avg_price_over_time.csv_30C4956DB4124B6C93F522683AE7393D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>avg_price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[avg_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>avg_price</remote-alias>
              <ordinal>1</ordinal>
              <family>avg_price_over_time.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[avg_price_over_time.csv_30C4956DB4124B6C93F522683AE7393D]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='avg_price_over_time.csv' id='avg_price_over_time.csv_30C4956DB4124B6C93F522683AE7393D'>
            <properties context=''>
              <relation connection='textscan.1iv80gs1ca0d4i15p7csi0ck6wap' name='avg_price_over_time.csv' table='[avg_price_over_time#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='month' ordinal='0' />
                  <column datatype='real' name='avg_price' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='condition_raw' inline='true' name='federated.0oc4rin0chyyou1b3q53k0xphmgh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='condition_raw' name='textscan.1aqbolf0vy5poz1h50udi1rx6k5d'>
            <connection class='textscan' directory='C:/Users/hunte/U.S. Used Car Market Analysis/exports' filename='condition_raw.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1aqbolf0vy5poz1h50udi1rx6k5d' name='condition_raw.csv' table='[condition_raw#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US'>
            <column datatype='integer' name='condition' ordinal='0' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[condition_raw.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[condition_raw.csv]</parent-name>
            <remote-alias>condition</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[condition_raw.csv_B4B024C2B27242ED86C0AB6C69994DBC]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='condition_raw.csv' datatype='table' name='[__tableau_internal_object_id__].[condition_raw.csv_B4B024C2B27242ED86C0AB6C69994DBC]' role='measure' type='quantitative' />
      <column caption='Condition' datatype='integer' datatype-customized='true' name='[condition]' role='dimension' type='ordinal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hunte/AppData/Local/Temp/TableauTemp/#TableauTemp_1japn9i0t1tlkx18tfspg09nw07m.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/09/2025 05:17:38 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>condition</remote-name>
              <remote-type>20</remote-type>
              <local-name>[condition]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>condition</remote-alias>
              <ordinal>0</ordinal>
              <family>condition_raw.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <object-id>[condition_raw.csv_B4B024C2B27242ED86C0AB6C69994DBC]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='condition_raw.csv' id='condition_raw.csv_B4B024C2B27242ED86C0AB6C69994DBC'>
            <properties context=''>
              <relation connection='textscan.1aqbolf0vy5poz1h50udi1rx6k5d' name='condition_raw.csv' table='[condition_raw#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US'>
                  <column datatype='integer' name='condition' ordinal='0' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='price_by_body_raw' inline='true' name='federated.1duxn0t15164qv155e5tm1wi9bue' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='price_by_body_raw' name='textscan.0n5ff5502c68ug110gyhn11vakyn'>
            <connection class='textscan' directory='C:/Users/hunte/U.S. Used Car Market Analysis/exports' filename='price_by_body_raw.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0n5ff5502c68ug110gyhn11vakyn' name='price_by_body_raw.csv' table='[price_by_body_raw#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='body' ordinal='0' />
            <column datatype='integer' name='sellingprice' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[price_by_body_raw.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>body</remote-name>
            <remote-type>129</remote-type>
            <local-name>[body]</local-name>
            <parent-name>[price_by_body_raw.csv]</parent-name>
            <remote-alias>body</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[price_by_body_raw.csv_3CAD798176154BCABB52FBCFE1570CE0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sellingprice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sellingprice]</local-name>
            <parent-name>[price_by_body_raw.csv]</parent-name>
            <remote-alias>sellingprice</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[price_by_body_raw.csv_3CAD798176154BCABB52FBCFE1570CE0]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='price_by_body_raw.csv' datatype='table' name='[__tableau_internal_object_id__].[price_by_body_raw.csv_3CAD798176154BCABB52FBCFE1570CE0]' role='measure' type='quantitative' />
      <column caption='Body' datatype='string' name='[body]' role='dimension' type='nominal' />
      <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hunte/AppData/Local/Temp/TableauTemp/#TableauTemp_02aeo4f1wgx71i1eggzk00tma07g.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/09/2025 05:32:46 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>body</remote-name>
              <remote-type>129</remote-type>
              <local-name>[body]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>body</remote-alias>
              <ordinal>0</ordinal>
              <family>price_by_body_raw.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[price_by_body_raw.csv_3CAD798176154BCABB52FBCFE1570CE0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sellingprice</remote-name>
              <remote-type>20</remote-type>
              <local-name>[sellingprice]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sellingprice</remote-alias>
              <ordinal>1</ordinal>
              <family>price_by_body_raw.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>767</approx-count>
              <contains-null>true</contains-null>
              <object-id>[price_by_body_raw.csv_3CAD798176154BCABB52FBCFE1570CE0]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='price_by_body_raw.csv' id='price_by_body_raw.csv_3CAD798176154BCABB52FBCFE1570CE0'>
            <properties context=''>
              <relation connection='textscan.0n5ff5502c68ug110gyhn11vakyn' name='price_by_body_raw.csv' table='[price_by_body_raw#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='body' ordinal='0' />
                  <column datatype='integer' name='sellingprice' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='clusters_rowlevel' inline='true' name='federated.1imy4s20281bid13aj6cj0fkxyxn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='clusters_rowlevel' name='textscan.1c4k5jy101x59k1aqk6d518dy46u'>
            <connection class='textscan' directory='C:/Users/hunte/U.S. Used Car Market Analysis/exports' filename='clusters_rowlevel.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1c4k5jy101x59k1aqk6d518dy46u' name='clusters_rowlevel.csv' table='[clusters_rowlevel#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='odometer' ordinal='1' />
            <column datatype='integer' name='sellingprice' ordinal='2' />
            <column datatype='integer' name='condition' ordinal='3' />
            <column datatype='string' name='body' ordinal='4' />
            <column datatype='string' name='model' ordinal='5' />
            <column datatype='string' name='state' ordinal='6' />
            <column datatype='integer' name='cluster' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[clusters_rowlevel.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[clusters_rowlevel.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>odometer</remote-name>
            <remote-type>20</remote-type>
            <local-name>[odometer]</local-name>
            <parent-name>[clusters_rowlevel.csv]</parent-name>
            <remote-alias>odometer</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sellingprice</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sellingprice]</local-name>
            <parent-name>[clusters_rowlevel.csv]</parent-name>
            <remote-alias>sellingprice</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>20</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[clusters_rowlevel.csv]</parent-name>
            <remote-alias>condition</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>body</remote-name>
            <remote-type>129</remote-type>
            <local-name>[body]</local-name>
            <parent-name>[clusters_rowlevel.csv]</parent-name>
            <remote-alias>body</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[model]</local-name>
            <parent-name>[clusters_rowlevel.csv]</parent-name>
            <remote-alias>model</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[clusters_rowlevel.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cluster</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cluster]</local-name>
            <parent-name>[clusters_rowlevel.csv]</parent-name>
            <remote-alias>cluster</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='clusters_rowlevel.csv' datatype='table' name='[__tableau_internal_object_id__].[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]' role='measure' type='quantitative' />
      <column caption='Body' datatype='string' name='[body]' role='dimension' type='nominal' />
      <column caption='Cluster' datatype='integer' name='[cluster]' role='measure' type='quantitative' />
      <column caption='Condition' datatype='integer' name='[condition]' role='measure' type='quantitative' />
      <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
      <column caption='Odometer' datatype='integer' name='[odometer]' role='measure' type='quantitative' />
      <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/hunte/AppData/Local/Temp/TableauTemp/#TableauTemp_07qy8no0etxt0d1d70pff0doz6bx.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/09/2025 05:33:48 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>clusters_rowlevel.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
              <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>odometer</remote-name>
              <remote-type>20</remote-type>
              <local-name>[odometer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>odometer</remote-alias>
              <ordinal>1</ordinal>
              <family>clusters_rowlevel.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30926</approx-count>
              <contains-null>true</contains-null>
              <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sellingprice</remote-name>
              <remote-type>20</remote-type>
              <local-name>[sellingprice]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sellingprice</remote-alias>
              <ordinal>2</ordinal>
              <family>clusters_rowlevel.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>847</approx-count>
              <contains-null>true</contains-null>
              <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>condition</remote-name>
              <remote-type>20</remote-type>
              <local-name>[condition]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>condition</remote-alias>
              <ordinal>3</ordinal>
              <family>clusters_rowlevel.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>body</remote-name>
              <remote-type>129</remote-type>
              <local-name>[body]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>body</remote-alias>
              <ordinal>4</ordinal>
              <family>clusters_rowlevel.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[model]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>model</remote-alias>
              <ordinal>5</ordinal>
              <family>clusters_rowlevel.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>6</ordinal>
              <family>clusters_rowlevel.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cluster</remote-name>
              <remote-type>20</remote-type>
              <local-name>[cluster]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cluster</remote-alias>
              <ordinal>7</ordinal>
              <family>clusters_rowlevel.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <object-id>[clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='clusters_rowlevel.csv' id='clusters_rowlevel.csv_C5A5176777554AD08E894E52AACEE845'>
            <properties context=''>
              <relation connection='textscan.1c4k5jy101x59k1aqk6d518dy46u' name='clusters_rowlevel.csv' table='[clusters_rowlevel#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='integer' name='odometer' ordinal='1' />
                  <column datatype='integer' name='sellingprice' ordinal='2' />
                  <column datatype='integer' name='condition' ordinal='3' />
                  <column datatype='string' name='body' ordinal='4' />
                  <column datatype='string' name='model' ordinal='5' />
                  <column datatype='string' name='state' ordinal='6' />
                  <column datatype='integer' name='cluster' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Body Types – Listings'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Toyota Listings by Body Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='body_type_counts' name='federated.0icee4v1bvothx1g98rwz13ysb0i' />
          </datasources>
          <datasource-dependencies datasource='federated.0icee4v1bvothx1g98rwz13ysb0i'>
            <column caption='Body' datatype='string' name='[body]' role='dimension' type='nominal' />
            <column caption='N' datatype='integer' name='[n]' role='measure' type='quantitative' />
            <column-instance column='[body]' derivation='None' name='[none:body:nk]' pivot='key' type='nominal' />
            <column-instance column='[n]' derivation='Sum' name='[sum:n:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0icee4v1bvothx1g98rwz13ysb0i].[none:body:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0icee4v1bvothx1g98rwz13ysb0i].[sum:n:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0icee4v1bvothx1g98rwz13ysb0i].[sum:n:qk]' scope='cols' value='Number of Listings' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0icee4v1bvothx1g98rwz13ysb0i].[none:body:nk]' value='39' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0icee4v1bvothx1g98rwz13ysb0i].[none:body:nk]</rows>
        <cols>[federated.0icee4v1bvothx1g98rwz13ysb0i].[sum:n:qk]</cols>
      </table>
      <simple-id uuid='{95C72BA7-33DE-418B-874D-8E0141CD9DD5}' />
    </worksheet>
    <worksheet name='Condition – Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Distribution of Vehicle Conditions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='condition_raw' name='federated.0oc4rin0chyyou1b3q53k0xphmgh' />
          </datasources>
          <datasource-dependencies datasource='federated.0oc4rin0chyyou1b3q53k0xphmgh'>
            <column-instance column='[__tableau_internal_object_id__].[condition_raw.csv_B4B024C2B27242ED86C0AB6C69994DBC]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:condition_raw.csv_B4B024C2B27242ED86C0AB6C69994DBC:qk]' pivot='key' type='quantitative' />
            <column caption='condition_raw.csv' datatype='table' name='[__tableau_internal_object_id__].[condition_raw.csv_B4B024C2B27242ED86C0AB6C69994DBC]' role='measure' type='quantitative' />
            <column caption='Condition' datatype='integer' datatype-customized='true' name='[condition]' role='dimension' type='ordinal' />
            <column-instance column='[condition]' derivation='None' name='[none:condition:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0oc4rin0chyyou1b3q53k0xphmgh].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0oc4rin0chyyou1b3q53k0xphmgh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0oc4rin0chyyou1b3q53k0xphmgh].[Multiple Values]' scope='rows' value='Count' />
            <encoding attr='space' class='0' field='[federated.0oc4rin0chyyou1b3q53k0xphmgh].[none:condition:qk]' field-type='quantitative' major-origin='0' major-spacing='10' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.2963535785675049' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='641' />
                <format attr='maxheight' value='641' />
                <format attr='minwidth' value='820' />
                <format attr='maxwidth' value='820' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0oc4rin0chyyou1b3q53k0xphmgh].[Multiple Values]</rows>
        <cols>[federated.0oc4rin0chyyou1b3q53k0xphmgh].[none:condition:qk]</cols>
      </table>
      <simple-id uuid='{A5AABE78-5187-4931-80E4-AD1830865037}' />
    </worksheet>
    <worksheet name='Geography – Avg Price by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Toyota Selling Price by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_price_by_state' name='federated.19zj9fc0thxqms1ccbv9r18fau54' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.19zj9fc0thxqms1ccbv9r18fau54'>
            <column caption='Avg Price' datatype='real' default-format='c&quot;$&quot;#,##0.00;(&quot;$&quot;#,##0.00)' name='[avg_price]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[avg_price]' derivation='Sum' name='[sum:avg_price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19zj9fc0thxqms1ccbv9r18fau54].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19zj9fc0thxqms1ccbv9r18fau54].[sum:avg_price:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19zj9fc0thxqms1ccbv9r18fau54].[none:state:nk]</rows>
        <cols>[federated.19zj9fc0thxqms1ccbv9r18fau54].[sum:avg_price:qk]</cols>
      </table>
      <simple-id uuid='{1CFE8CDC-FDC2-4B57-A8C3-06FE6CE4EA52}' />
    </worksheet>
    <worksheet name='Models – Top 10 Sold'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Most Sold Toyota Models</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='top_models' name='federated.0q5cz5405sbxla19jnggt07687de' />
          </datasources>
          <datasource-dependencies datasource='federated.0q5cz5405sbxla19jnggt07687de'>
            <column caption='Model' datatype='string' name='[model]' role='dimension' type='nominal' />
            <column caption='N' datatype='integer' name='[n]' role='measure' type='quantitative' />
            <column-instance column='[model]' derivation='None' name='[none:model:nk]' pivot='key' type='nominal' />
            <column-instance column='[n]' derivation='Sum' name='[sum:n:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0q5cz5405sbxla19jnggt07687de].[none:model:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0q5cz5405sbxla19jnggt07687de].[sum:n:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0q5cz5405sbxla19jnggt07687de].[sum:n:qk]' scope='cols' value='Number of Listings' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0q5cz5405sbxla19jnggt07687de].[none:model:nk]' value='45' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0q5cz5405sbxla19jnggt07687de].[none:model:nk]</rows>
        <cols>[federated.0q5cz5405sbxla19jnggt07687de].[sum:n:qk]</cols>
      </table>
      <simple-id uuid='{0639D491-1472-464B-B5DB-9DB69008BB7D}' />
    </worksheet>
    <worksheet name='Price Over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg Toyota Selling Price Over Time (500 + Listings)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='avg_price_over_time' name='federated.13nirr30e6u8tn146vy2a0z16ume' />
          </datasources>
          <datasource-dependencies datasource='federated.13nirr30e6u8tn146vy2a0z16ume'>
            <column-instance column='[avg_price]' derivation='Avg' name='[avg:avg_price:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Price' datatype='real' name='[avg_price]' role='measure' type='quantitative' />
            <column caption='Month' datatype='date' name='[month]' role='dimension' type='ordinal' />
            <column-instance column='[month]' derivation='None' name='[none:month:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13nirr30e6u8tn146vy2a0z16ume].[avg:avg_price:qk]' field-type='quantitative' max='13100.0' min='11500.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.13nirr30e6u8tn146vy2a0z16ume].[avg:avg_price:qk]' scope='rows' value='Average Selling Price ($)' />
            <encoding attr='space' class='0' field='[federated.13nirr30e6u8tn146vy2a0z16ume].[none:month:qk]' field-type='quantitative' major-origin='#2015-03-02#' major-spacing='1.0' major-units='months' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.13nirr30e6u8tn146vy2a0z16ume].[none:month:qk]' value='' />
            <format attr='text-format' field='[federated.13nirr30e6u8tn146vy2a0z16ume].[avg:avg_price:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.13nirr30e6u8tn146vy2a0z16ume].[none:month:qk]' value='*mmmm yyyy' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13nirr30e6u8tn146vy2a0z16ume].[avg:avg_price:qk]</rows>
        <cols>[federated.13nirr30e6u8tn146vy2a0z16ume].[none:month:qk]</cols>
      </table>
      <simple-id uuid='{8E2C3B25-6D5A-4602-AFA3-F57C9699A151}' />
    </worksheet>
    <worksheet name='Price by Body – Boxplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Price Distribution by Body Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='price_by_body_raw' name='federated.1duxn0t15164qv155e5tm1wi9bue' />
          </datasources>
          <datasource-dependencies datasource='federated.1duxn0t15164qv155e5tm1wi9bue'>
            <column caption='Body' datatype='string' name='[body]' role='dimension' type='nominal' />
            <column-instance column='[body]' derivation='None' name='[none:body:nk]' pivot='key' type='nominal' />
            <column-instance column='[sellingprice]' derivation='None' name='[none:sellingprice:qk]' pivot='key' type='quantitative' />
            <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1duxn0t15164qv155e5tm1wi9bue].[none:sellingprice:qk]' scope='cols' value='Selling Price ($)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1duxn0t15164qv155e5tm1wi9bue].[none:body:nk]' value='36' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.1duxn0t15164qv155e5tm1wi9bue].[none:sellingprice:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1duxn0t15164qv155e5tm1wi9bue].[none:sellingprice:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.38381215929985046' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1duxn0t15164qv155e5tm1wi9bue].[none:body:nk]</rows>
        <cols>[federated.1duxn0t15164qv155e5tm1wi9bue].[none:sellingprice:qk]</cols>
      </table>
      <simple-id uuid='{836BB9ED-2EC7-4BBD-BF6D-BC278FB580AC}' />
    </worksheet>
    <worksheet name='Price vs Odometer'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000'>Selling Price vs. Odometer (Toyota, ≤ 300k miles)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='price_vs_odometer' name='federated.0mghwcs16pszro17lokwf19ajzes' />
          </datasources>
          <datasource-dependencies datasource='federated.0mghwcs16pszro17lokwf19ajzes'>
            <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sellingprice]' derivation='None' name='[none:sellingprice:qk]' pivot='key' type='quantitative' />
            <column caption='Odometer' datatype='integer' name='[odometer]' role='measure' type='quantitative' />
            <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0mghwcs16pszro17lokwf19ajzes].[none:sellingprice:qk]' scope='rows' value='Selling Price ($)' />
            <format attr='title' class='0' field='[federated.0mghwcs16pszro17lokwf19ajzes].[none:odometer:qk]' scope='cols' value='Odometer (miles)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mghwcs16pszro17lokwf19ajzes].[none:sellingprice:qk]</rows>
        <cols>[federated.0mghwcs16pszro17lokwf19ajzes].[none:odometer:qk]</cols>
      </table>
      <simple-id uuid='{EFF241D2-45E4-49EB-B639-77D99A7EF01D}' />
    </worksheet>
    <worksheet name='Segmentation – Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cluster Segmentation: Price vs Odometer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clusters_rowlevel' name='federated.1imy4s20281bid13aj6cj0fkxyxn' />
          </datasources>
          <datasource-dependencies datasource='federated.1imy4s20281bid13aj6cj0fkxyxn'>
            <column caption='Cluster' datatype='integer' name='[cluster]' role='measure' type='quantitative' />
            <column-instance column='[odometer]' derivation='None' name='[none:odometer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sellingprice]' derivation='None' name='[none:sellingprice:qk]' pivot='key' type='quantitative' />
            <column caption='Odometer' datatype='integer' name='[odometer]' role='measure' type='quantitative' />
            <column caption='Sellingprice' datatype='integer' name='[sellingprice]' role='measure' type='quantitative' />
            <column-instance column='[cluster]' derivation='Sum' name='[sum:cluster:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1imy4s20281bid13aj6cj0fkxyxn].[none:sellingprice:qk]' scope='rows' value='Selling Price' />
            <encoding attr='space' class='0' field='[federated.1imy4s20281bid13aj6cj0fkxyxn].[none:odometer:qk]' field-type='quantitative' max='400000' min='0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1imy4s20281bid13aj6cj0fkxyxn].[sum:cluster:qk]' max='3' min='1' num-steps='3' palette='blue_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1imy4s20281bid13aj6cj0fkxyxn].[sum:cluster:qk]' value='Cluster'>
              <formatted-text>
                <run>Cluster</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1imy4s20281bid13aj6cj0fkxyxn].[sum:cluster:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.31784531474113464' />
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1imy4s20281bid13aj6cj0fkxyxn].[none:sellingprice:qk]</rows>
        <cols>[federated.1imy4s20281bid13aj6cj0fkxyxn].[none:odometer:qk]</cols>
      </table>
      <simple-id uuid='{C45468E8-CE3A-43EF-93D0-3613F0C97A46}' />
    </worksheet>
  </worksheets>
  <windows source-height='177'>
    <window class='worksheet' name='Geography – Avg Price by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19zj9fc0thxqms1ccbv9r18fau54].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{912FCB38-6406-414F-8215-A701CFF94455}' />
    </window>
    <window class='worksheet' name='Models – Top 10 Sold'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0q5cz5405sbxla19jnggt07687de].[none:model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C62449D5-839E-4A6E-BEF2-5C89F171E4BA}' />
    </window>
    <window class='worksheet' name='Body Types – Listings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0icee4v1bvothx1g98rwz13ysb0i].[none:body:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EDE43135-FFC4-47F3-9136-91DC23136BE2}' />
    </window>
    <window class='worksheet' name='Price vs Odometer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4406A8F0-4FA9-40D2-9BDB-803C208F4D71}' />
    </window>
    <window class='worksheet' name='Price Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13nirr30e6u8tn146vy2a0z16ume].[yr:month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BCA705E7-204B-4DC5-A2C0-553C7FD1AD9C}' />
    </window>
    <window class='worksheet' name='Condition – Distribution'>
      <cards>
        <edge name='left'>
          <strip size='135'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0oc4rin0chyyou1b3q53k0xphmgh].[none:condition:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9415253B-C9B7-4710-9843-BAF6055EA9CF}' />
    </window>
    <window class='worksheet' name='Price by Body – Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1duxn0t15164qv155e5tm1wi9bue].[none:body:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8DB86EA0-392C-4689-88B0-64B61675526D}' />
    </window>
    <window class='worksheet' maximized='true' name='Segmentation – Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1imy4s20281bid13aj6cj0fkxyxn].[sum:cluster:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{89EE7572-F760-4D13-9C6C-3383D7A3E8FF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Body Types – Listings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Condition – Distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Geography – Avg Price by State' width='192'>
      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
      uEwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Models – Top 10 Sold' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZ90lEQVR4nO2dWW8lx5Xnf5F595W83MnipiqWa9HmUhmQ7CdLowdDMNCDgbvd8xXmAzTQ
      Dw3PTM/HGGCmH9xAd0MD2YYF25iRSoZk2WrZtZEssrjdhZd34yXvvmVmzAOr6FJJLrLIZCXJ
      jN+LmKXLkyeD959xIuKcCCGllCgULkVz2gGFwkmUABSuRglA4WqUABSuRglA4WqUABSuRglA
      4WqUABSuRglA4WocFYCUEtM0bbNnGIZttuy2ZxgGdi26W5al2u0Y9p7kXPUAdmd12GlP+ea8
      rW+y57HV+hH4148XSBeqttiyLImmCVts2W3PkhJN2GNLAkiJsMmeW9oNvu6b4wKYXy9wd63o
      tBsKl3KuQiCF4nlRAlC4GlsEIM0eua0cHcO+mQmF4kVgyxhgZfkBg+MzGL0O9Z0mnkAIjCb1
      RhtN1wlF+9DMFh1DEg7HwOrgC4SxcdylUBwJWwTQkxp98SjSaJEp5MlV24z0BRkOWRQ9M9S2
      NqntFLl05RqpTAZhdLj4rSs8ms9QKBzDlhAoqJssLD4gn01R6epomsDrDxAJBwmFInh0Qf/A
      MPFYDJ+xDcEhdPX2V5wCbOkBZr/1KqZpomsawxMWmqbzeOp2EiB2EQBpWaDHmZlM2HFbheLY
      2LYOoOv6V/77jQjB9MWLCBX8K04JL3QhTAhh2+qlQmEHah1A4WocT4W4Oj1EKOC3xZaUFkLY
      p2k77e3ZEoAdPaBESmzrTU9/u52cb8LJjbGklFiW9exxw3PQ6/Xwer222LLbXq/Xw+Px2PKl
      tSwLy7LweOx5f7ml3R7be9I3FQIpXI0SgMLVOD4GWNgoUmv1bLFlmCYem8Ipu+2ZpommabZ0
      5XaHjqe93ex6Tvi6b44L4F8+mlf1AArHUCGQwtUoAShcjRKAwtUcawwgrR5LCw/wRuJMTV7A
      7PUIBHxISyIBs9dFeP2kV+7ji/QhRYyx4TBC6LYWYSsUR+VYAjBqW2h9M1y8ECW5sojUfVg+
      P4XVJGMzEzSaBobZI+yRSCSWaZBaX6G02+HGzddU96NwnGN9B4U/Qqe2TbvToWXAyPAQZqfB
      wNgU/WEP0fgAPh0erzUbvRqNlsDqdrDs8F6hOCbH6gE8/n7GEy228kWmLoxT3N7lwuRFrG6P
      UNBLM5dnYHicsE8gPF6kBTuePH0DM9g3s6tQHJ3jrQMIwcDIBAOPLqci8b0fvHtmR8cnvvYr
      odDM/s+qIFLhNCoMV7gaJQCFq1ECULgax+sBDMNE0+3RYa9n4PXal95kpz2jZ+zl79uw/CGt
      R8lwHrvqKE55u52gb44nw2maQNfsEYBloy277VmaQNPsqYm2sAAXtZuNteRP+6ZCIIWrUQJQ
      uBrHQ6D/+r9ucXe1YIstiT0l5ydhz+2+/c07L/O377xs413swXEBSCltXRCze0SvfLPJnnNz
      Lc9EhUAKV6MEoHA19gpAWqwtL7K6nqLd++bDMtqVbVYzOVtvqzgbSClZXFzk1q1bVKtVpJSs
      ra2xuLgIwObmJnfu3CGTyfDrX/+aatWewxOfhe0CMPUAg/4e2VKFzUya1Y00+VyOdrPO9s4O
      G1vbNMr2DHoVZ4+xsTGklJRKJQAikQj5fJ5Op8OdO3fI5/MsLy/zxhtvsLCwcOL+2B4C1Xby
      3FkpMBLz0Wg2yGTSmJ0mqXSGci5FtrhDcjNHzzydgyLFyeL1eh9lABgIIRgeHkbTNL788kvW
      19f54x//uL/rXbfbPXF/7J0FEoKJqUtE/ZJSuYq0JPG+PoZHBimuFXn12hXmgEw6jVcXth+C
      rDjdSCm5c+cOzWYTwzBYWFig2+1SKBR49913uXnzJsvLywgh+PTTT7l58+aJ++R4LtA//M//
      p/YFcgE/fvs6f/sfXtm/brfbeDyeA/c3Pem9QR1fB1C4k0Ag4LQLgJoGVbgcJQCFq3F8DHB3
      JUelac9o3+6NVO20Z6ctKSVSSjSbUo5fRLtNj8SZHu17blsnPQZwXADqgIznRx2QcTx76oAM
      heIRSgAKV+P4NOi/frxAqmBPzoe0pK1nENtpz1bfJEikfYfkHcK3cMDHf/mP37HlfqcJxwUw
      v15QC2FngL5I4FwKQIVAClejBKBwNccOgaTZI5cvkhgewer1CAZPxxK34mSwLIuHDx8yNjZG
      LBZjc3OTfD7P4OAgmqbR6XSYnJwkmUxiWRazs7NOu/xMjt0DrCwtEohE6bQ7NBtNWo0KW7ki
      nU6L/NYmhe0K1Z0Sm9ksrU6Pne0SO5Wa2hj3jFIoFIhGo3z22WcA9PX1EY1GWVtbw+PxsLGx
      wb1790in0wwODjrs7cEcWwCTU5NsbqxRbbbYym6xsvSQRnmLtUyORgd2ijlyW3l8QlDc3aZc
      ynP3zjzfXC+mOO0MDg6yuLjIpUuXAAiHw+RyOW7cuEG32yWZTFKr1dja2uI3v/mNw94ezLFD
      oFajjsfnpVapITQNv89DBy+JcBChB2mZbcBLKBikUS+yW+vh1TTVA5xR/vCHP7C8vEwgEEAI
      wdjYGKZpEgwGuX37NtFolGg0SqVSwTAMp909EFtSIZ7O/fjLuSUS07T2D4xW9QBnh75IgP/9
      93+1f22aJqlU6isxvmmaWNbe2T9CCDRNO3a+0plIhXj6y/6Xc3sEuq7b9jAK59B1/WsDXF3X
      979cHo/HtmS9k+T0e6hQnCBKAApX43gqxNXpIUJBvy22pGUhbOx27bQnLQshNHs24ZQSKbEx
      T+ng5wwH7EuXPk2oeoAXZE/VAxzd1qkfBCsUZxUlAIWrcXwMsLBRpNrs2WLLNA103b5HstOe
      aZmPjuY5flcukUjLQtP+HDpqGrx1ffLYtt2G4wL4l4/m1UKYDXh1jX/770oAz4sKgRSuRglA
      4WqUABSu5pljAGs3yaY2jb+RRPP14fN7iYYCWFLSLG5QDUwyGvOysLDAy9ev7SXBeXQsw8SU
      4PPomKbJxsYGMzPTmFLD69GQ0r6CbsVXKZVK3Lt3D4Dvf//7bG9v8+GHH/KjH/2IO3fuUC6X
      mZycZHV1lXA4zNtvv+2wx87yTAFIs8vGxiq+Tp7xcS+1BqTXSng8knDAS34nS7W4t0tZY7dI
      MpPB39dPOV0jENEZiPvpakFa3Tbz9xfBkvhjPnpdD1e+dRHdxh0cFHsMDAwwMzNDMpkE9gpW
      Ll68CMArr7zCrVu36Ha7DA4Oks1mMU13V2YcEAIJJqYvcmFsCCwLw+iie4P4vTroPiYuXMD7
      yEKpuE04EqFVr5IYHice8lNpG4wOD+IXPXqmzsDQAKb0cfXKJTy6ir5Ogkwmw+Li4n6BimVZ
      tNttWq0Wv/rVr7hy5QrXrl0jHo/vpyy7mWf2AFp0jFEBWmAciYYloZBZJb/d4OrLs/gDOtHR
      kb3QR3YpVZpMXRjFowXQCKJpJltbeQbG50i0K9Q6gsnxUdSL/+QIBAL4/X6WlpbodDpcvXqV
      cDhMqVRidHSU1dVVgsEgrVaLt956C03TXN0LPFcukJSSdrOO1AME/V6OG8arghj72FsH+Ov9
      68d/1sOMtdycC/RcC2FCCILhqC2OKE4WNclwONwdACpcjxKAwtU4Xg9gmKZtMxFGz8DjtS+9
      yU57hmHYlr//TXUUAoF2xNkFNQZwEE2IR1mSx8fS7LNltz1LCDQhbCuIwcZ2czOqBRWuxvEe
      4O5qnkrDBWeEWSa6djhbXq/O915Wqc0vAscF8P4ni2od4CniYb8SwAtChUAKV6MEoHA1toZA
      T86oPp7t2Ps3cey0CbfyZErD0zPWT1+r1d/nx1YBGL0yf/z3DNF+PxcvXcarQ6WySzzeBzz6
      A0qJVFN4h6JSqfCLX/yCH/7wh8RiMVZWVlhaWqLVahEIBOh2u3z3u9/l1q1bzM3N8cYbbzjt
      8pnD3h4AC58viJA9Ug/u0/CE8Yo2lUqZxNAImfUt2u0KwxMzTIwN2Xnrc0kkEuH69ev7Oy7P
      zc1Rr9eJRqMsLS0RiURIpVK02+2v9QaKw2H7a1jTBJOzl4gEgsxduQimCZZFu9Wi07O4cGGC
      nWIBw7L7zucPy7Ko1+s0Gg1arRaGYVAoFJidneXatWs0Gg0mJyd57733SKfTTrt7JrFVAB5P
      nMtXZ4kE/SQmJggImJ6eZXxsnF6ny4WpMRCCkfFxPCoCOpB2u000GqXRaPCnP/0Jy7J48803
      9//fK6+8Ql9fH8lkUoU/R8TWEEjTfASDez/7QyEAIpG99OmJicijT8X3P6867WcTjUZ57bXX
      ALh8+TIAPp8Py7KYm5vbzy26efOmYz6eddR7WOFqlAAUrsbxVAhNE2p3iKdQU8QvDsfrAdT5
      AM+POh/gePbU+QAKxSOUABSuxvExgGFaWDYFYT3DAmHfHjfPa8+jayof54zhuAD+8Z8+OTf1
      AP/8D/+J0Dk9TO68okIghatRAlC4GiUAhas5lgBa1W2+/PJLllc3npHd2SW3tX2c25wpDMPg
      1q1bVCoVAHZ2dvjtb3/L/Pw8m5ubfPHFF/R6PT799FM+//xzDMNw2GN3c6xBcCCaIBTKMT05
      yVY2w+hAkNJul0JhF28owHjcy06rTbPtobazRaB/FM1o0DYEs7NTthyaftqwLItoNEqtViMe
      jxONRhkcHGRtbY2pqSnq9Tq6rnPjxg1u3bq1v9CjcIZj9QBCCMSjcsed3R2sboNKtUpoYBKf
      sMjvNpiZnsCvWfSkn7HBILVqk1wmy3ndkNvn8xGP/znjVQhBMBjEMAz6+vrQNA3Lsvj444/5
      9re/TSAQcNBbxbFfPX39/WiaIBEJsJ7dJZ4YRvd5wRdDN1ssLaeIxBLEH+2JI4SkLzFwbgcf
      zWaTlZUVAoEAm5ubDA0Nsby8TCKRYGlpie3tbTY2NsjlcnzxxRe8++67+P1+p912LY7nAp2n
      8wGeXgdoNBqEw2FA5QIdx5bKBTqjPP7yK04vSgAKV6MEoHA1js+//fjtl3nvrZ4ttpzeHNfn
      te/eiheD4wK4Mj3oioIYxelEhUAKV6MEoHA1jodA//x/75PMV2yxZVnyyOdkHceeR9f5u//8
      Pdvuq3hxOC6ApVTpzC+EedU2d2cW9ZdTuBolAIWrOXIIJC2D3VqT/njMTn/OPNVqlWAwiNfr
      xTRNFhYWmJ6eZmVlhW63y9TUFOl0Gp/Px+uvv66K6B3myD1ALr3K/YU1ms0GhXyOnUoVy+pQ
      r7fYyqTIZAs0qmXSmTS7tTY7pTy5Yplms0khn8ewayuIU0S1WuXnP//5fjFMLpdjeHiY3/3u
      d8zOztJoNBBCcPnyZZLJpNrT/xRwJAF0qkUy2200o0VmY5WeFiSVTGL0KmQyBXZ2u5jVMplc
      kejAIMXNBzxcy1NKbfBwYxVD83Med0OMxWK8/vrr+9cDAwPcvn2b69ev79cEjI6OUqlUmJub
      Q1NbIDrOkUIgzRdifLif9fUGejDGcH+UWt5kfWMTqQ8S9IUI0KbHXjGIxxvArzXRw3H8fp3R
      gTjaN5x5ddapVqvcu3ePYrHI5OQk6+vrpNNpEokExWKRV199FYCHDx/yzjvvOOytAmysB5By
      b4Orv7Sxq5QWUoqvzKufl3oAr0fj3/7bX+9fSylJpVJMTU3tx/iqHuDotk6yHsC2dQAhNPRn
      +CiE5pqTIoUQTE9PO+2G4hCoIFThapQAFK7G8VSIV14aoS8assWWZVm2zqwc1p7nWbGf4lTj
      eFG8OiDj+VGD4OPZU0XxCsUjlAAUrsbxMcDd1TyVRtcWWydZE5yIBXn14ohtthWnA8cF8P4n
      i2diIezG5TElgHOICoEUrkYJQOFqbAmBpJQgxNe3O5cSCecq5/3xrPHjZzpoFvk8Pft55Pg9
      gNnks99+TtuwsKR8lBQnMQwDaXa592AZaRm0Ol2klJi9Ll3j7G6Ovrm5yU9/+tP9688//5wP
      PviA+fl5fvazn/HLX/6Szc1NPvjgA9LptIOeKg7DsXuAcnaL4Ylhyju7NHYrhD0WvmiYrVSa
      QGIcgKXFebxeH95ogGKmjS8I11++eiYPyBgbG2NycnL/utVq8YMf/ID333+fkZERqtUqn376
      KbFYjHK5zNTUlIPeKg7ieD2AlOTLu5i9DvlCmQBttrvQ2ikTjoZodzp7H9M89MVi9Iwew6MT
      RAJezmolQK/Xo1ar0Ww2abVadLtdstksL730EuPj45imyfj4ONevXyefzzvtruIAjt0DTM1d
      JRwK0Wg0CHgk4bZGUOuyU20wGO9HFxJhdqg0ekyOzWAZGtIaP7Oj71qtxvj4OIVCgUKhwHe+
      8x2SySQ3btxgYWGBN998k5GREebn579SHaY4nRxPAEIQDu0lsj3eC3/ADxAiFO174oNhwo9r
      5z1/vu1Z7AWGhoYYGhoCYGZmBtgrfQR47bXX9j/35M+K08tZfRErFLagBKBwNY6nQuiahn4G
      tog4Cz4qnh9VD/CC7Kl6gKPbUvUACsUJoQSgcDWOjwEMc28/ITvoGSYI+zT9pD2vR53/dR5x
      XAD/+E+fnPp6AE0I/s//+Bun3VCcACoEUrgaJQCFq1ECULiaIwugsLnOv3/xJZv5sp3+nGp6
      vR4fffQR9XodgN3dXT788ENSqRS3b9/mk08+oVKp8NFHH3H79u1zt/v1eeTIg+Ch8UnypSbj
      w3Gy6RSNrmQgorHbgFjMQ2m7SiSeoLaTp9vq4A1GGBkfp10t0zYEs7NTZ64ewDRNIpEIzWaT
      SCTC8vIyb775Jr///e/p9Xr4fD4WFxcZHR0lm81iGIY6aPuUc+QeQIi9cj9hdahUm2xlNsmU
      68y+NEmjXGH64iy1UglvMMZgf5yx4RHqzTK1apNcJstZrAkLBAJEIpH968dbJxqGgRCCRCJB
      u91GCIFlWaoHOAMcYxpUoz/RDwgQkv6BAcYGwiwuPGR0tJ/M+gbx4RE8Ovikgc/vI6wFaIsG
      fYmBMzn4qNVqbGxsUC6XWVtbY3p6ms8++4y5uTmKxSKlUokbN25w9+5dIpGIevufARzPBToL
      B2Q8vQ4gpaTVahEKHX5TX5ULdHRbKhfolCGEeK4vv+L0ogSgcDVKAApX43gu0I/feZn3vtuz
      xZZpmOg2Jq09tnfWpmsVh8dxAVyZGnRFQYzidOK4AEzTtG2+3LIsDMOwxZbd9qSUmKY9qx9S
      SuSj3ffs4DS3m2VZtrXbY3tP+ua4AHRdt3VPf7umBu22ZxgGuq7bNg0qpXRFuwG2tdtjnvTN
      cQHYeaidnbbstmenLSGErV8It7TbN9lzdCFMoXAa/Sc/+clPnHRAWj3WV1awvCFC/ucccFo9
      NtbW2Kl3CPkE6+tJApEY9e0sWzst4rHwod+Urfouu/UeQZ/Gxtoqlh5AM5usJTcJx+KUcym2
      6z1ikfCBJ95LaZLP5vBFwjS2cyQ383iDEXbzKcoNk0hAsLq6hjcYw+99dhgjLYPC1iblaoew
      X7C6to4vFKVTK5Ha2qEvFiKzsU5beokE/Qc+Z7dVI53JgidAtZRls7BDOBImm1yjgw/dbO0/
      s0d/9ttXSkkpl6GwUyccDJBaX0V6gohenbXkFpFYjO2tJOWGSSwSOrDdzG6LVDJFV3ow6mVS
      2Ty+UISdXJKdlkXYB6ura/hC8QPb7ZGDZJMpfPEY+eQa9Z5GyGuxsrKOPxyjuZt3fh1gN71B
      cGyGfCb53FslGu0mdUMwOjxILp1hdGKY5HqaQqVNwKw/19ljzVaNUrFMs5RG75+kmEmSTG9x
      YTRBMr3KdlUg2ttU2wcPyGSvQyFfpGNabOW2GRkbI+xtst30ozcKPFhOMjI9Szq5frAtSxKK
      JWiUC6QyaUYujJPZWCeTrzIa7LK4lkYLD1DKZQ71nKYlGBlJkN3MUijXmBgfpVMrIEJDbOfS
      pDNbTIzESGVLh7IXiSegs0t6fRVv4gKFTJJkJsfESJz19Bq7TQ80i9Q71sHGhM7Q6BjZ1AbZ
      fInR8TFCngblVhDqeZYephidniG1sXYo3xq7edYerFOr5mh4B2gVszzcSDExM00qucRWseW8
      AFodSTTsA8viEE30FTRfkJBmcH/xAV1TEAj6MdodPB4PPt1D5zlmIgaGhvHqGkbXwB8KoGHR
      EzpBv49ur47HE8bj1el1DxaA5gsxnIgjgKGhPrKpDVKpNLo/jM8n2GlD2O9DWgf7p+k629kk
      keEJdMDvD2H1GuheP6GATrnRIegLIOXhWk/HYHVtk+mZKRLxECuLDyjWGvj9QaS0MNEJBvx0
      Owe/PIQQWN0mlVoPIQ38wSBCmphCJ+jz0unW8eghNI+O0TvEs3o87OQy6P4Qg4N9e0LPZNAD
      EXweQbUDId/h2g2rx5df3qXdrZLLFPCHg/iERd3UCPn9WGYTTQ84L4CRiQQP786jh+M875yG
      ZXXpdi28Xh99cT8P5ldIjI9ituvkqg36I8FD28pl0uyUS1jhPgoP72P5YwwFNe4vrzM0NIfR
      TrNdMYlHDw7TjHadfKnEVrZAs9XGskwC8SnMyjr5qsYrM1Hm788Tih986F6vuUu6UKaUzRKK
      hnm4OE9kaAavUWMh3eC1l0bJZlbQfeFDPedWZoN6q02uUKLT6YCuk4gPUcgsI7wR+kIaC0sp
      hocTB9qS0mQrV0TXNcIDQ+Qe3odgH4mAYH4lxdjIJTrNNJW6RTR8cLs1KyWqHQsBdNptpLTw
      x6YxdlYoNjSuTkZYmJ8n3D968IMKD9/7/ju8fPUaU9+6TGVjiV0R5PJAkHvz94n2X0K3yqdj
      EPz0sUNH+13YO6lJHMvevk0hEE8c8XRUm0/+3tO+HtneEwbs9U0ghNxvxyPZOFa7SSxLfuWz
      39Rux/qe8HhX8r2fToUAFAqncDwEUiicRAlA4WqUABSuRglA4WqUABSuRglA4WqUABSuRglA
      4WqUABSu5v8DHuLSSEDKiQcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Price Over Time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAYlElEQVR4nO3d2XNk53nf8e/pfe/TjW4Aja0xG2ehhpFZ1gwX0bpwyXFFVbEsUmukSqWS
      CzuWRdqK5Nj/Q1y5SC5znYrssishaZsuWyLFZaghTXI2YgYDDNYGutH7vp0+by4wAw05AAmQ
      aAwa5/lUoabmDIB5T+P99XmXB+doSimFEBZle9gNEOJhcuznN1NKYZompmmiadp+fmsh+mKX
      AVAUN1LYQ6O0S1lwemjWa0xOjLK0uEI0PkwhnyUxkcTtsANgt9v72Gwh9seuh0BBj41qGxwO
      jVK5iqZpNHN5QuOjLN66hT4UJ58v9LOtQuy7XQegWmtSrxRotDrY7RqNeoWWBhtLK4TjcTLr
      6/j9wX62VYh9p+11Fejep98b4yulQNNAqa1jvV5PhkBiIOx5Evzxye3W32XSKwaQLIMKS5MA
      CEuTAAhLkwAIS9v1Rlhu5TamfgytnqPe7tDrtvF6PdTqLXx+P416g9HxJCG/q78tFmIf7TIA
      GrFomJSh4XNoNEtNokPD5BfnGH3sC6xc+ZDkmTPUamX8niimaSI1dmIQ7HIfQFHMpKgqD/Zu
      A7vbh9Gq4g9HKeXzRIaGKBYKJCaSeJw22QcQA2PPG2G7IQEQg0ImwcLSJADC0iQAwtIkAMLS
      JADC0iQAwtIkAMLSdl8KsTqH0qcxKxt0TJNuq40/4KNSrRMIBqlVq4yOTxP0OfvbYiH20e5L
      ISIhUoaGU1O43B46rTbpxVWmHj/P8gfXSZ49R7VawueWUggxOPZQCrFCxfTSLGwQjo9At4Ev
      ECaXzaIPDVEqFBmbTOJ12WUnWAwMKYUQliaTYGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFp
      uy6FyKfugJ7EKGfoaTY6rRZer5tqtU5I16mUyyQmpvF79vWRA0L01a57azQcYM0At13DVBr1
      eo1GqUzi0dNbpRDlchGPU0ohxODYfSlEepmS8tHMpdHjcVr1On6/j2qtRiisUylXSEwm8bsd
      shMsBoaUQghLk0mwsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsLRdl0IU1hbR9Ek65QzK7sBo
      tTA1jW67gx6NUioWSUxM43PL+r8YHLsuhdCDXta74HXY6eDE7+nRbBgEp8ZZuXKDqTNnKZUK
      uGNSCiEGx+5LIdYXKaoAjY0UsfEpbMogpvuZX1q7e1+gGomJJAGvU3aCxcCQUghhaTIJFpYm
      ARCWJgEQliYBEJYmARCWJgEQliYBEJa2+wdkrNympx+D6gbtnqLbahKPR1nfyOP3+Wg0GoyM
      Jwn73f1tsRD7aPcPyIiGSRkaNtPA43ZTKrboLqwwfO4UK1dmSJ45Q71WJeBxSCmEGBh7eEBG
      ihpuWoUcwaE4ZqeB2xegWioRicUo5AuMTUzhdtpkJ1gMDCmFEJYmk2BhaRIAYWkSAGFpEgBh
      aRIAYWkSAGFpEgBhaTvuBM/OL3LqeBJN0wBFbnUOpU9jVjYw0GjUagzHo2SyRQLBIPValdHx
      JEGf6wCbL8Tn80AAypUq12/O8bcv/zP//ju/x/mzpwCNWCREytBwYOJy+2nWq2yspomfPrH1
      gIxqtYzPLXeFEIPjgQBomo2/eemf+N3f/jJfOHPy7lFFsdbBUEVqxQqhmBu3y40nEqWwnGLy
      kVMUNjIkJpNbO8CyEywGwQOlEOmNHE6nAxQMRfXP9E2lFEIMCqkFEpb2wBDIaNd491+uoNkd
      KM3Jbzz+RdwOWSwSR9MDPVuzuUlMTqHaFUbGprBrMpkVR9cDAVBml0s/f5lcrcet2Xk0m7z7
      i6PrgSGQ6nWZOvkYNrsNpdlodXr43fLwa3E07TgJVkrd3QTbO5kEi0Gx7Vv72sItri+uMj56
      nEfPHjvoNglxYLYNgALatQqmzbl1JJ+6A3oSo5zBdLhx0aBreKjWy4TCOtVKmdHxaQJeGS6J
      wbF9bzVN/MEwYG4diuoB1gxw2cDsdVhYW0HV3Jx88tGtUohKpYjXJaUQVmYYBvl8nng8jmEY
      tNttNE0jEAiwsbFBOBwml8uh6zr5fJ6RkRE6nQ6FQoGxsTEymQwTExMH1t4HJ8FK0ex0MA0T
      PRzYOl6qtuiqIpVcAX0kwbkz56iWu+SXU4wdP0Y+k5ZSCME777xDt9ul0WhgGAahUIjFxUWe
      euop6vU6s7Oz1Go1Hn/8cWZmZhgfH8dut7O2tsbq6ipDQ0PYbDZsB7T6uE0tkEbA7SQ4PEE0
      7L93lMhokghAIr71uT4/jDAMQDwWO4DmisPu1KlTvPjii5w9e5ZUKsXNmzc5ffo0nU5nq2Mn
      k0kWFhZIJBLcunWL06dP4/f76XQ65HI5Go0GgUDg0/+zffDAKpBSird/8fcUen6efuJL6EHf
      nr+prAJZV7FYJJVKkUgkaLVadDodHI7Nm6WZpomu6xSLReLxOJlMhkQisRUMTdNIp9NMTk5+
      5hXIvdpmDqBYzWSp1tPUHnvsMwVAWFckEiESiez475dnUhxLjBAM+gkGgw/8+9TUVD+b94Bt
      rwCmuTn51TQbNtvekyhXALGdtVyVH//Pf2Qo7MXnceJxOvB7XUSDXmK6l6GQj7juQw94CPrc
      BLz9/+WqbTfCVu7MMHdnmUJD8bWv/S6ePfZlCYD4uEyhxl/+7G2+89uPcv74CEopuoZJrdkh
      V26QKzcoVltkS3VKtRaVeptW18DrcuJ1O9ADHuK6j6GQj5juYyjkxed24vM4cTo+e1/bdhnU
      6/JgmIrESIyeCUhfFp/DRrHOf/s/l/jBv36M88dHto47HXZ8HifDEf+2X9frmTQ7Bo1Wl0Kl
      SaHaJF9psrBeJF9pUm92aLS7OBx2Ah4XetBDLORlKOwjFvYRDXkJ+924nHZcDvu284ptA1Cu
      VnB6AkwfP4nfud1nCLE7G6U6f/mzS/yHf/NFzibjn/4F97HbbQS8LgJe144hUUrR7vSoNNqU
      ai2K1Sa5coP3b6fJlRtU6m26Rg/DNAn53ERDXiIBD3Hdz1DYt30AIrrOaq6697MV4j4bxc3O
      /5++9jgnJ6J9+T80TcPjduBxO3YMCUDPNCnX2hSrm1eSXLnJjYWN7TbCTFZWVygXCzTb3XtH
      ya8toumTdEsZlMMFRhvN7qBWrRGORCiXSiQmkvikclSw2fn/+1+9zX/sY+ffC7vNRjTkJRry
      cuK+49v0VoNmc3O91uP69T9HQl7Wu+Bx2OjaHNhokkulSXzhNMtXbpA8c5ZSqYg7JqUQVrdR
      qvM//vZdfvA75zk2GsIwjIfdpB1tEwAn08kENxZTtOpN2Nz/pdwwgRKlYgWfbqdjKEaPHaO+
      kePEmdMUS0VGEgkphbAwpRTv3U7zD7+a40+++QRxfechyWGxbSmEAgobacbGT907SmR4bDMK
      wx8teYhGwgAEttnUENahlOK92XX+7xu3+On3nj6QNfz9sG0xXEs5mRiO4vV5H0abxAD6l9l1
      /t8bt/iz7z2Nf0A6P+xwb9DZq5fwRMcpZPMH3R4xgN69ucaLb87y0wHr/LDDTrDZ61IqV/EF
      gnhce98IkJ1g63j35hovXZrlx99+kqBv8B6Ru+0VYH7mKq9feoOr1+YOuj1iQCilePvGKi++
      dWtgOz/sEIB4PEZqcYWWaSCrmeLjlFK8dX2FF9+a5SfffXpgOz/sEIBsNse/On+G9aU5Sp2D
      bpI47N68tsLfvT3Hn3//ywOz2rOTbQMwNj5Judrg4lO/hT7Y5yf22etXl3jl8hz/9d8NzlLn
      J9m2biGzkcfvd5PdyDM9NgQociuz9PTjUN2g3QOHzaRndGm0DXxeH81mg5HxJGH/4F4OxSd7
      4+oy//jOnYEf9txv2wD4XeAbSnLu5PTdIxqxqE7K0LD1DIKhKLViFid24lMjrFybYer0aeq1
      KgGPQ0ohjqBfXlnm1Q+W+NNvXsTnth/q8oa92DYAmk1j5tq7eJwezp9JAopivYupSjTqTZSz
      TqPZZmh4hMr6BtNnTlPM50lMTGG3b46qZBn0aFBK8cury/z8/UX+4vvP4PMcrfr4bQPQMcHt
      sN33CwQakeGJzVKIkbulEKOjAMSGNiv9wlIKcSS9dmWJf3r3Dn/xg2fwuY9W54cdAhAOR5iY
      mGY4/tmeECOOhlffX+Tn7y3w59//8pHs/LDDKpCpTEyjQ73ZPuj2iEPi1Q8W+fn7C5vlDZ7B
      X+3ZyYPPB1CKmQ9nWF1N4fwMZRBisCmleO3KEm9cXean3z0aS52fZNsrQCQSwev1okxZybES
      pRRvXFvm9StL/JfvPHXkOz/IQ/LEfX55ZYlfXlniJ995CrfLGr/aao2zFJ/qtQ+WePPaMj/+
      tnU6P0gALO/eOv+b15d54VtP4LXYTQ12ebaK3OocSp/GrGzQxU6tWuaR6XHmltYIBILU6jVG
      x5OEfEd/3HhUKKX4xfuLvHMzxQvPPXFklzo/yS4DoBGLhEgZGg5l4vWH0JRJs1QlPj3B8gc3
      SJ49R61axu+Wu0IMitc+WOLyzTV+9OwFXA7tyJQ37MWurwDFWoeeKlIrVwk5vRidFoY/QnFl
      nalHTlHIZhibnJZSiAFw753/8s11fvztp3A5rfuzklUgi/n1sGeN55+7+JF7P1mRPAXbQu51
      /nfvDnus3vlBVoEsQynF3/9qjqvzGZ5/7iJeC054tyNXAAtQSvHK5Xnem13nhW8+IZ3/PnIF
      OOKUUvzDr+Z499Y6f/a9py094d2OBOAIuzfsef92mp9819qrPTuRIdARda/zX5lL86ffekIm
      vDuQV+UIUkrx0qVZPlzMyZj/U+yhFGIeIkl65Q16mp12o4Y/4KdcqREMhalWyyTGpwl45cV+
      mJRS/N3bt7l+Z4M/+daT8s7/KfZQChEkZWi4bGCYPXyhIXILt0l88TzLH1wnefYclUoJr0tK
      IR6ml9+e48ZClheeu4DDhiXLG/ZilzvBimJ6hbLy0sxn0OMjdBoV/MEw5VLpvkckTeNz22Un
      +CHYHPbc5sbCBi98U8b8uyWlEEeAUoqXL93mw8Usf/zsBRnz74G8TQy4e2P++bUCzz930VK/
      zLIfZBl0gN1b6ry1kucPv/4l6fyfgbxiA2rznX+OW8s5fvTcRRx2eS/7LPr2qtXrdarVKoZh
      0Ov16HQ6W6tDuVwOpRT5fJ5er0c+v/kopnK5TDqdpl6vk81m+9W0gXdv2HN7Nc8Pn70gnf9z
      6Nsk+JVXXmF6eppms0kikWBmZoYnn3ySer3O0tISpmni9XpZWlpidHSU6elpnE4nly9fxu12
      MzExQR0/b15b4Ru/dZaw3y2XeH692nNnrcAf/N5v4nbKa/J59O3VO3nyJDMzM1y4cIF2u83Y
      2BjdbpdgMEiz2cQ0TRqNBhcvXuTy5cuMjY3h9/sZGRkhGo1y/fp1QhPnyJUb/K+X36NQbeH3
      OJkaCXNyPMrkcIjEUBC3037fPUyPNqUUL741y2K6xH/++pdwOmSl7fPq2xVgYWEBTdNwuVzY
      bDba7TY2mw2Xy0W1WmV0dJQ7d+4wOjpKs9kkFoths9nwer1ks1k6nQ5TU1Nb31MpRaXeZmWj
      wvxakfm1AplCHZtNY3I4RHJE5/iYTnJEP3J3MIZfv/PPpwr88Bsy7Nkvu94Iy68toOlJmrkl
      wrEEufQ6wVCQUqlMSI9QKZcYHU/i9zgObB9AKYXRM1nKlLmzVuTOWpGVjQo902Qo5OPEeISp
      kTDJkTCxsG9grxRKKV56a5a5tSI/evYCdpt0/v2y6wCoWoa1XoyQmadr85PPrNMoFpn6jfN3
      7wpxlkajwUhssxTiYXa2TrdHvtLkzlqRhXSZdKFGsdpED3gYifg5ntCZTujEdT/uASgRfunS
      bRbTZf7g3z4u7/z7bA+lEEsUzSCeXhnNHYFuFZfHR6FQJBQOU61UGJ1IEvA4D+VOsNEzKdVa
      LKVLLKbLLGVK5MoNnA4740NBpkY35xaj0QB+j/NQXC1Mpfib12ZYy1X5w6//poz5+8DSpRBK
      Kcr1Nuv5KgvrJRbWS2QKNYyeSUz3cWIswomxKNOjOh6340DffZVS/OwXN1jP1/ij35cJb79Y
      OgA76XR7rGyUWc1WmV8rsJQuU2t2iIa8HB+LcGIswvSoznDE35f/XynFX736IalshR9+44J0
      /j6SAOyCUgqlIF9p3L1SFJlfK1KsNHG7HBwfi3AssRmMuO77XMVoplL89S8+ZDVX4flnL27d
      aEz0hwTgczB6JvVmh5VsZXPCvV5iNVvB63YwEvFzYixKcjRMYihI2O/+1HmFqRR//eqHpLJV
      /vgbF3A4pPP3mwRgn5lK0Wh1yRRqzN9dmk0XarQ6BsMRP9OjOslRnanhEHrAszW8MU3F//7n
      6+TLDZnwHiAJwAFpdwxy5QZ37g6hFtMlGq0uQa+L5KjO/FoRPeDhj37/S7LUeYAkAA+RUopC
      pclcqsDLl27z/HMXGQr7HnazLEUCcEA6nQ5O5877C0qpQ7H3YDW7vyvEyiw9/QTt7Dzh+CQb
      6VVcDjutbg+vx0uz1WR0LEk44O5viweQaZq89NJLPP3001y9epVnnnmG119/na9+9assLCyw
      tLREIpEgm81is9nodDp85StfYXZ2lvn5eYLBIFNTUySTyYd9KkfO7u8KEdVJGRCJ6nR7Pbrt
      Lr16g+Ezp1i5NsPU6dPU61UCXofcFWIb4XCYtbU1EokEAPF4HMMwaDabdDqdrStEOBzm2rVr
      dLtdIpEIJ06coFarsby8zPj4+EM+i6Nn9w/IqBsoVaHRa4PTQTDkJxDSqaxvcOzMaQr5AomJ
      SXlAxjaUUvR6PSKRCLlcbqva9fbt2wQCAXRdR9M0ut0ufr+f8+fPU6vVUEpx8uRJbt26RSgU
      wuGQ2v/9JnMAYWmy3iYsTQIgLE0CICxNAiAsTQIgLE0CICxNAiAsbQ+lELcxI8dpZ++gD09R
      zq3T6nQxFfj9AeqNOqNjSUJ+V39bLMQ+2kMpRJiUAXokjMKBy2nHbXfhiEdYvrJ5V4harYzf
      Iw/IEINj93eFyKxSVT5cvRqaR8dlM9FDfhYXV9BjMUr5AonJJB6nTXaCxcCQUghhaTIJFpYm
      ARCWJgEQliYBEJYmARCWJgEQliYBEJa2+1KI1XnQp2nmFoiMJMmtrzAUi5LO5AgGQ1SrFUYn
      pgl6j97TWcTRtftSiEhwsxRCD9FuNKjUGnQqdeLnTrH8wXWSZ89RrZTwuaQUQgyOPTwgY4Wy
      8uPuVdHcIbrNCm6Pl2qlih6NUiqWSEwm8bnsshMsBoaUQghLk0mwsDQJgLA0CYCwNAmAsLRd
      B0CZPXqmwjR7mErRbDTodDdv7qqU2vyzny0Vog92vRFWWJ2lHT5FN3cbfThJamWJ8XiEfLNN
      r9nG4XYT1GPE9P48OVGIftj1FSAajaCU2vwTO5FwgNRqCr8eplGrEwwF6Xba/WyrEPtu1wEo
      t204ejXaHUWv20QpSJ49j6rVOfvYo3RabYbj0X62VYh9t68bYUopTNPENE1stv2bXx+2xwf1
      sz2H6VzvdY1+tOewnGdfdoL3++RM00TTtEPxgkF/f3iHaRe9nwE4LOfZlwAIMSge2j5AIZsh
      tZ7BVAr1CR+VSmXb4+m1FYrlMitLS9QaTVZTawBk1lMY5sM6q52pXo96o/mJ5/qRD6PN6uoq
      5XKVpaUlmq0ma+kstXKBlVQa8xC+bZlmm4X5RZqd3if+7D7+YfYM1lKrlGt1lhfuUG+2SK2l
      6TYqLCyt9vXn+dAeOtXq9Ih4NWZu3wGjSyDoI+R2kNoo4HR6MXod7C4PLgxyuQKm0cRmd9Iy
      TB45dQqf10s+kyGQGCG/kcPusNGsFclks4Ri4zgO2RafMg3KpTxzNzcIDw1hdLs4vD5cNnBi
      kq910LoNfOEoToeNkeERPE7IpteJJRLki1Vsqku13KZjOg/lnotptmg2exQyKcq1Bna7jWyh
      gGo3cbj8+H0OlM1OJlvC5zBxeIN4nA6Ghkfwuh1U15fwjD9CNp3C4XJQK5dpdbt9PdeH1k16
      nQaruRpBjx2Px4tpdDEMAxwufF4PsdgQ4ZAfp8OOAkylNo8PJ7BrJrOzt/EEAhTTaRxuN+Vy
      iXK1gdFu0WwftuVYRT6XpV1vYHc4MHAyFAnRabfIF0tU63WU2SMSGybqs1NpmvQaBeZXcvgC
      XjLraVxOB8ViCacviNlpYPQOYwRsDMXjOGzg9nhxOeygNEKRGG6HIpsrUK7U0DAJ6kOMDYXY
      KNWh22BuYRVPWCe/cgenx0elVMJ0eXH3mjS6/TvXQzAHUDzQAk3j3rTr4837+IRMKfWRzz+s
      7j+Pe+ew3bk1qmVs7gAel/0jX7t13kqh6M/EdD99/Hy3O9dOs0YHFwGv66Nfd+/neQDneggC
      IMTDc8hGykIcLAmAsDQJgLA0CYCwNAmAsDQJgLC0/w/C1iFdqDzNlQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Price by Body – Boxplot' width='192'>
      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
      KoBESQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Price vs Odometer' width='192'>
      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
      +h2NKAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Segmentation – Scatter' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
